{"nbformat":4,"nbformat_minor":0,"metadata":{"celltoolbar":"Slideshow","colab":{"name":"L03 More Types","provenance":[],"collapsed_sections":["S4CkZnM_4FvB","odfPyGzkdUIJ","JPxEMRO9bFgc","nx4iryO296kf","MiqSwuSkggbP","GFggsPxW6lqW","MID_5W3JHkY8","VUnSbmkzyKwd"]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.4"}},"cells":[{"cell_type":"markdown","metadata":{"id":"S4CkZnM_4FvB"},"source":["# Lecture 3 - More Types (https://bit.ly/39oWACa)\n","\n","Today:\n","* More strings\n","* Type Conversions\n","* Automatic Type Conversion\n","* More Input\n","* List basics\n","* Dictionary Basics"]},{"cell_type":"markdown","metadata":{"id":"odfPyGzkdUIJ"},"source":["# More Strings\n","\n","In Python3.0 strings are sequences of symbols from an alphabet called Unicode: https://unicode.org/ \n","\n","* Unicode allows a very wide range of symbols for many languages and encodings. Much more than ASCII (http://www.asciitable.com/), which is what Python used to use. This requires more memory to store the strings, but prevents weird syntax translation issues."]},{"cell_type":"markdown","metadata":{"id":"qEy9bWvx5QHt"},"source":["![alt text](https://pediaa.com/wp-content/uploads/2018/07/Difference-Between-ASCII-and-Unicode-Comparison-Summary.jpg)"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"z5hWOCXYcrFt","executionInfo":{"elapsed":584,"status":"ok","timestamp":1569539469038,"user":{"displayName":"Benedict Paten","photoUrl":"","userId":"02468802669323291213"},"user_tz":420},"outputId":"694e6e4c-17e5-429d-d48a-8bc0552cff97"},"source":["# Strings can be expressed a bunch of ways:\n","\n","type(\"hello\") # Double quotes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"13L6yoJ2f5_F","executionInfo":{"elapsed":693,"status":"ok","timestamp":1554323886402,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh6.googleusercontent.com/-KEXp34y2Ra8/AAAAAAAAAAI/AAAAAAAAAHs/xzPsOsCpcaU/s64/photo.jpg","userId":"06399644931392855882"},"user_tz":420},"outputId":"17e82f98-e82e-4f31-e2a0-3bc2c856471c"},"source":["type('hello') # Single quotes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"xG8NQ3iLf7m4","executionInfo":{"elapsed":378,"status":"ok","timestamp":1554323904826,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh6.googleusercontent.com/-KEXp34y2Ra8/AAAAAAAAAAI/AAAAAAAAAHs/xzPsOsCpcaU/s64/photo.jpg","userId":"06399644931392855882"},"user_tz":420},"outputId":"cdf6c8d7-bfc9-46e3-8cb2-f8b64a39fc59"},"source":["type(\"\"\"hello\"\"\") # Triple double quotes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"ospXwmAEf9cn","executionInfo":{"elapsed":539,"status":"ok","timestamp":1554324028562,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh6.googleusercontent.com/-KEXp34y2Ra8/AAAAAAAAAAI/AAAAAAAAAHs/xzPsOsCpcaU/s64/photo.jpg","userId":"06399644931392855882"},"user_tz":420},"outputId":"13ca371a-b6ce-48f6-afcc-3df1628a2531"},"source":["type('''hello''') # Triple single quotes"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":14}]},{"cell_type":"markdown","metadata":{"id":"ND2UHQJkgCCH"},"source":["We have these different syntax so we can embed quotes and whitespace (tabs, spaces and new lines) in strings. "]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"_kq0Ugs2Gc8_","executionInfo":{"elapsed":437,"status":"ok","timestamp":1554324081443,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh6.googleusercontent.com/-KEXp34y2Ra8/AAAAAAAAAAI/AAAAAAAAAHs/xzPsOsCpcaU/s64/photo.jpg","userId":"06399644931392855882"},"user_tz":420},"outputId":"3ec14f59-7aa5-44c7-8d0d-474b02e1450f"},"source":["# We can embed single quotes in double quotes:\n","type(\"This is a string containing a 'single quoted substring'\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":15}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":130},"id":"J5UDSxu6gnm8","executionInfo":{"elapsed":501,"status":"error","timestamp":1554324108166,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh6.googleusercontent.com/-KEXp34y2Ra8/AAAAAAAAAAI/AAAAAAAAAHs/xzPsOsCpcaU/s64/photo.jpg","userId":"06399644931392855882"},"user_tz":420},"outputId":"b27a3768-0b1f-4524-c772-bee9b7a8b837"},"source":["# Trying to embed single quotes \n","# in a single quoted string naively does not work\n","type('This is a string containing a 'single quoted substring'')"],"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-16-0e7cba48a14d>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    type('This is a string containing a 'single quoted substring'')\u001b[0m\n\u001b[0m                                              ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"nvgVKUi2g7yI","executionInfo":{"elapsed":432,"status":"ok","timestamp":1554324181369,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh6.googleusercontent.com/-KEXp34y2Ra8/AAAAAAAAAAI/AAAAAAAAAHs/xzPsOsCpcaU/s64/photo.jpg","userId":"06399644931392855882"},"user_tz":420},"outputId":"49f5539f-bdd5-4965-c235-f0fe8bea4316"},"source":["# And vice-versa, we can embed double quotes in single quotes:\n","type('This is a string containing a \"double quoted substring\"')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":17}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":131},"id":"mZ-JcBF9jkay","executionInfo":{"elapsed":1099,"status":"error","timestamp":1569539635155,"user":{"displayName":"Benedict Paten","photoUrl":"","userId":"02468802669323291213"},"user_tz":420},"outputId":"aac1e383-898b-4b0f-95a0-a5592e4b20c3"},"source":["# Single and double quoted strings can't span multiple lines:\n","type('This is an \n","      attempt to have a string on two lines')"],"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-7-0aefa5e3a41a>\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    type('This is an\u001b[0m\n\u001b[0m                     ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m EOL while scanning string literal\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"tPVSUn-biK47","executionInfo":{"elapsed":417,"status":"ok","timestamp":1554324236518,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh6.googleusercontent.com/-KEXp34y2Ra8/AAAAAAAAAAI/AAAAAAAAAHs/xzPsOsCpcaU/s64/photo.jpg","userId":"06399644931392855882"},"user_tz":420},"outputId":"d6dda436-f9f3-4bb3-dd71-5213c27942b7"},"source":["# Triple quotes (either single or double), allow embedding essentially anything, \n","# including spanning multiple lines:\n","\n","type(\"\"\"Boom, now\n","   we can make crazy strings that ' nest quotes in quotes \" \" ' etc.\n","   and which span multiple lines\"\"\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":54},"id":"2NARKErpkhsr","executionInfo":{"elapsed":850,"status":"ok","timestamp":1554324365093,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh6.googleusercontent.com/-KEXp34y2Ra8/AAAAAAAAAAI/AAAAAAAAAHs/xzPsOsCpcaU/s64/photo.jpg","userId":"06399644931392855882"},"user_tz":420},"outputId":"062c975d-aed6-4de7-c18b-4be0692e3bc8"},"source":["# You will also see this a lot in Python code:\n","\n","\"\"\" \n","A comment string. \n","\n","These can be used to document some code\n","across multiple lines. We'll later see this at the top\n","of classes and functions as a standard way of giving\n","a description string.\n","\"\"\"\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["\" \\nA comment string. \\n\\nThese can be used to document some code\\nacross multiple lines. We'll later see this at the top\\nof classes and functions as a standard way of giving\\na description string.\\n\""]},"metadata":{"tags":[]},"execution_count":20}]},{"cell_type":"markdown","metadata":{"id":"JPxEMRO9bFgc"},"source":["# White Space Characters\n","\n","* There is a difference between the contents of a Python string and what gets printed to the screen.\n","\n","* In general, Python and most other programming languages use reserved ASCII or unicode characters to encode white space in strings. \n","\n","* Lets cover tabs and newlines"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"lwuNwoa1kPb1","executionInfo":{"elapsed":872,"status":"ok","timestamp":1571351313722,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBMnWy8dDR7jyTHNy9tPaRx6DCyA3QKrIcuQ7R4=s64","userId":"06399644931392855882"},"user_tz":420},"outputId":"f77eb9ac-60af-4b1b-c933-4c4a1e47eb17"},"source":["s = \"This\\tis\\ttab\\tseparated\" # Tabs are encoded with '\\t' \n","\n","print(s)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["This\tis\ttab\tseparated\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":87},"id":"-S3ED-nHk4uA","executionInfo":{"elapsed":484,"status":"ok","timestamp":1571351375970,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBMnWy8dDR7jyTHNy9tPaRx6DCyA3QKrIcuQ7R4=s64","userId":"06399644931392855882"},"user_tz":420},"outputId":"12ed2be0-97e4-4141-dcb7-37cf24e25d10"},"source":["s = \"This\\nis\\nnewline\\nseparated\" # Newline characters: '\\n' specify new lines\n","\n","print(s)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["This\n","is\n","newline\n","separated\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"UlraTeHQlUvU","executionInfo":{"elapsed":929,"status":"ok","timestamp":1571351438223,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBMnWy8dDR7jyTHNy9tPaRx6DCyA3QKrIcuQ7R4=s64","userId":"06399644931392855882"},"user_tz":420},"outputId":"b42aef5a-099a-4c51-e513-4711fc29a452"},"source":["s2 = \"\"\"This\n","is\n","newline\n","separated\"\"\" # This is the equivalent way of specifying s by using \n","# explicit white space in your code\n","\n","print(s == s2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["True\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":87},"id":"JYS9BkO6lg2I","executionInfo":{"elapsed":476,"status":"ok","timestamp":1571351461721,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBMnWy8dDR7jyTHNy9tPaRx6DCyA3QKrIcuQ7R4=s64","userId":"06399644931392855882"},"user_tz":420},"outputId":"9dbc2e01-4047-4bea-c45f-b1dd45974af4"},"source":["print(s)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["This\n","is\n","newline\n","separated\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":87},"id":"p1PTjHmMliDv","executionInfo":{"elapsed":485,"status":"ok","timestamp":1571351463892,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBMnWy8dDR7jyTHNy9tPaRx6DCyA3QKrIcuQ7R4=s64","userId":"06399644931392855882"},"user_tz":420},"outputId":"dc867dbb-f667-4b5a-9039-a2f1b089c974"},"source":["print(s2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["This\n","is\n","newline\n","separated\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":69},"id":"Wk43tEb0l550","executionInfo":{"elapsed":874,"status":"ok","timestamp":1571351511757,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBMnWy8dDR7jyTHNy9tPaRx6DCyA3QKrIcuQ7R4=s64","userId":"06399644931392855882"},"user_tz":420},"outputId":"b9239e54-5105-472e-de52-6ae4ddd5092d"},"source":["# It is often convenient to use tab and newline characters in your string \n","# formatting to make the strings do what you want, e.g.\n","\n","print(\"Welcome to my program.\\n\\tHere is an indent.\\n\\t\\tHere is a double indent\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Welcome to my program.\n","\tHere is an indent.\n","\t\tHere is a double indent\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"Mdhal66NmQHu"},"source":["Doing the above with triple quoted strings is less compact, and generally more error prone,\n","because the way the editor encodes tabs depends on how the code formatting is setup:\n","e.g. are blocks of spaces tabs? how many spaces? etc."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":69},"id":"MqDnWyC_mXwN","executionInfo":{"elapsed":626,"status":"ok","timestamp":1571351574595,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mBMnWy8dDR7jyTHNy9tPaRx6DCyA3QKrIcuQ7R4=s64","userId":"06399644931392855882"},"user_tz":420},"outputId":"66396915-41fa-4076-c1e9-ccdbaae24efa"},"source":["print(\"\"\"Welcome to my program.\n","    Here is an indent.\n","        Here is a double indent\"\"\")"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Welcome to my program.\n","    Here is an indent.\n","        Here is a double indent\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"nx4iryO296kf"},"source":["# Type Conversion"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"6wtzEpU6hH4D","executionInfo":{"elapsed":469,"status":"ok","timestamp":1569539824065,"user":{"displayName":"Benedict Paten","photoUrl":"","userId":"02468802669323291213"},"user_tz":420},"outputId":"47fd552f-33fd-44cf-c5b4-5f91d608fdd7"},"source":["# It is useful to know that int, float and string types can be cross converted\n","\n","type( int('5') ) # This int() turns the string into an integer "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"3_CzAiTvhzXQ","executionInfo":{"elapsed":486,"status":"ok","timestamp":1569539847816,"user":{"displayName":"Benedict Paten","photoUrl":"","userId":"02468802669323291213"},"user_tz":420},"outputId":"748b4210-804e-404c-b4b0-ba24889cb259"},"source":["type( str(5) ) # We can also go back the other way"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":166},"id":"7galkn84iCsf","executionInfo":{"elapsed":466,"status":"error","timestamp":1569539868997,"user":{"displayName":"Benedict Paten","photoUrl":"","userId":"02468802669323291213"},"user_tz":420},"outputId":"ed75be1f-2c32-429e-a29a-3f5bb02eaf45"},"source":["# Of course, this doesn't work because int() doesn't how\n","# to interpret 'foo'\n","int(\"foo\")"],"execution_count":null,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-11-6c00556e7f8a>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"foo\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mValueError\u001b[0m: invalid literal for int() with base 10: 'foo'"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"b-su-iJhiVUg","executionInfo":{"elapsed":535,"status":"ok","timestamp":1569539921108,"user":{"displayName":"Benedict Paten","photoUrl":"","userId":"02468802669323291213"},"user_tz":420},"outputId":"f5aef519-2a67-447a-b758-0e95e30ad25d"},"source":["# We can also convert between floats and ints, doing \n","# rounding as we go float --> int\n","int(5.999)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":34},"id":"z6ISL0_Hif7J","executionInfo":{"elapsed":497,"status":"ok","timestamp":1569539932138,"user":{"displayName":"Benedict Paten","photoUrl":"","userId":"02468802669323291213"},"user_tz":420},"outputId":"ae78ec2d-ec9a-4f19-cfde-5368aa9e7771"},"source":["float(5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["5.0"]},"metadata":{"tags":[]},"execution_count":13}]},{"cell_type":"markdown","metadata":{"id":"MiqSwuSkggbP"},"source":["# Automatic Type Conversion"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-tRC_KvLQznp","executionInfo":{"elapsed":457,"status":"ok","timestamp":1607393155959,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"0af55f0a-757a-4b36-a73b-93e00d1358cb"},"source":["# Remember everything in Python has a type, discoverable with \"type()\"\n","\n","# What's the type of x?\n","x = 6\n","\n","type(x)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PZLtFsLwQ1Xk","executionInfo":{"elapsed":383,"status":"ok","timestamp":1607393157453,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"7abf453e-57db-4be9-8fc4-0e70c1356a04"},"source":["y = 5\n","\n","type(y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vvlSITbvQmp8","executionInfo":{"elapsed":383,"status":"ok","timestamp":1607393158678,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"c0c32394-6952-46c9-c01b-1630872dabc9"},"source":["# So what's the type of our expression result?\n","\n","type(x // y)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["int"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fL7D8cPVQu7T","executionInfo":{"elapsed":386,"status":"ok","timestamp":1607393163405,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"b7289a02-c419-4530-95d8-2e842547dff3"},"source":["type(x / y) # And this one ?"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":9}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ak9CmTIJREvA","executionInfo":{"elapsed":452,"status":"ok","timestamp":1607393165002,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"33470a33-d35a-47af-a912-a653813f78d9"},"source":["type(x + 0.0) # Python will generally automatically switch into floating point to avoid losing the decimal"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["float"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"VNemVpofRKmr"},"source":["In general, Python will try to convert into floating point if needed. However, you can use float() and int() to make it do what you want."]},{"cell_type":"markdown","metadata":{"id":"GFggsPxW6lqW"},"source":["# More Input"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Kbsy1ieS6lqY","executionInfo":{"elapsed":2440,"status":"ok","timestamp":1607393280148,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"5c1b3879-f9c3-4c8e-b153-bb66d6e75229"},"source":["# Recall:\n","\n","name = input(\"What's your name? \")\n","\n","print(\"Hello\", name)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["What's your name? Ben\n","Hello Ben\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"olkcXHHz6lqg","executionInfo":{"status":"ok","timestamp":1610495174610,"user_tz":480,"elapsed":2705,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"}},"outputId":"5efa2d35-6c2f-4f23-a0bd-265c3507cd40"},"source":["# Input always creates a string.\n","\n","# We can use type conversion to create numbers\n","\n","value1 = int(input(\"Enter a number: \")) # Read a first number\n","# from the user\n","\n","value2 = int(input(\"Enter another number: \")) # Read a second number\n","# from the user\n","\n","print(\"The sum of your two numbers is: \", value1 + value2)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Enter a number: 5\n","Enter another number: 10\n","The sum of your two numbers is:  15\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"V4a91aOq6lql"},"source":["* Note: input(), like print(), str(), int(), type() is an example of a function, we'll come back to how these work soon"]},{"cell_type":"markdown","metadata":{"id":"MID_5W3JHkY8"},"source":["# List Basics\n","\n","Python lists are sequences of objects"]},{"cell_type":"code","metadata":{"id":"7jpmuhZ2H9Mj"},"source":["x = [ 1, 8, \"hello\"] # Python lists are sequences of objects\n","\n","# They are specified using this square bracket notation"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L404R-wpIJNB","executionInfo":{"status":"ok","timestamp":1610495395337,"user_tz":480,"elapsed":394,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"}},"outputId":"d53d4067-5f3c-4142-c3e4-6580d28b6143"},"source":["len(x)  # The length of the list"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"P8ZaQvcFIMJn","executionInfo":{"elapsed":338,"status":"ok","timestamp":1607393851269,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"5b08d31e-3b34-4d5a-9072-d171382ed479"},"source":["print(x) # Printing a list shows it contents"],"execution_count":null,"outputs":[{"output_type":"stream","text":["[1, 8, 'hello']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z7kWX_iuIXnf","executionInfo":{"elapsed":338,"status":"ok","timestamp":1607393852471,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"e20c4700-f52f-4208-ea21-2c018f108ede"},"source":["x[0] # The first element of the list, Python lists are INDEXED FROM 0 "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["1"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4zxPY5pvIdcT","executionInfo":{"elapsed":326,"status":"ok","timestamp":1607393853731,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"cd79b1fd-379a-449b-99f7-0327fe4c87ed"},"source":["x[1] # The second"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"j5sUzBpxIfJy","executionInfo":{"elapsed":353,"status":"ok","timestamp":1607393855019,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"b36d07aa-349f-47c7-82e3-865c3d510fc3"},"source":["x[2] # The third"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'hello'"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Mal2A87YImp2","executionInfo":{"elapsed":343,"status":"ok","timestamp":1607393856573,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"cb527017-7c8a-45e6-9c17-e52eb6d5f9cc"},"source":["print(\"Before\", x)\n","\n","x[0] = 2 # Replace a member of the list\n","\n","print(\"After\", x)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Before [1, 8, 'hello']\n","After [2, 8, 'hello']\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z8lM2V7EI0VX","executionInfo":{"elapsed":317,"status":"ok","timestamp":1607393907915,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"a3901eaf-2ac7-4a51-b009-260a213c9549"},"source":["dir(x) # Lists have many other features, we'll visit them again soon\n","\n","# dir() is a builtin function we can use to discoer the variables \n","# and methods of a Python object - the \"__\" names look strange here, \n","# we'll figure these out later"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['__add__',\n"," '__class__',\n"," '__contains__',\n"," '__delattr__',\n"," '__delitem__',\n"," '__dir__',\n"," '__doc__',\n"," '__eq__',\n"," '__format__',\n"," '__ge__',\n"," '__getattribute__',\n"," '__getitem__',\n"," '__gt__',\n"," '__hash__',\n"," '__iadd__',\n"," '__imul__',\n"," '__init__',\n"," '__init_subclass__',\n"," '__iter__',\n"," '__le__',\n"," '__len__',\n"," '__lt__',\n"," '__mul__',\n"," '__ne__',\n"," '__new__',\n"," '__reduce__',\n"," '__reduce_ex__',\n"," '__repr__',\n"," '__reversed__',\n"," '__rmul__',\n"," '__setattr__',\n"," '__setitem__',\n"," '__sizeof__',\n"," '__str__',\n"," '__subclasshook__',\n"," 'append',\n"," 'clear',\n"," 'copy',\n"," 'count',\n"," 'extend',\n"," 'index',\n"," 'insert',\n"," 'pop',\n"," 'remove',\n"," 'reverse',\n"," 'sort']"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"markdown","metadata":{"id":"VUnSbmkzyKwd"},"source":["# Dictionary Basics\n","\n","Dictionaries are \"maps\" (think like a function) from a set of keys (domain) to a set of values (codomain)"]},{"cell_type":"code","metadata":{"id":"Fv6ucZiFYbG9"},"source":["english_to_spanish = {\"two\": \"dos\", \"one\": \"uno\", \"three\":\"tres\"}\n","\n","fruit_costs = {\"apples\": 430, \"bananas\": 312, \"oranges\": 525, \"pears\": 217}"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"L2INsf0OhGkP"},"source":["* Dictionaries are defined by curly braces {}\n","\n","* They are a collection of key:value pairs, each pair separated by a comma.\n","\n","* Keys and values can be most Python objects, e.g: { 1:\"hello\", \"two\":True }\n","\n","* You look up elements in a dictionary using square bracket notation:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"0tE3-3TZiLY1","executionInfo":{"elapsed":1128,"status":"ok","timestamp":1606701189291,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"42f08720-81ae-49cc-f542-c6d921639555"},"source":["english_to_spanish[\"one\"]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'uno'"]},"metadata":{"tags":[]},"execution_count":2}]},{"cell_type":"markdown","metadata":{"id":"cuONFTaehZ9M"},"source":["**No duplicate keys**: You can't have duplicate keys in a dictionary:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4vxBbOTbysDq","executionInfo":{"elapsed":1125,"status":"ok","timestamp":1606701189292,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"2bfac3c3-5d17-47e1-bdb8-3300eecd2638"},"source":["a = { 1:2, 3:4, 1:6 } # Don't expect this to out work well\n","\n","print(a) "],"execution_count":null,"outputs":[{"output_type":"stream","text":["{1: 6, 3: 4}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"a8MVbh8f3VB0"},"source":["**Duplicate values are allowed**:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qJOxmZ1p3X-A","executionInfo":{"elapsed":1122,"status":"ok","timestamp":1606701189292,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"0f3af977-2a7f-4c9f-8331-179e205d95a2"},"source":["a = { 1:1, 3:4, 5:1 } \n","\n","print(a) "],"execution_count":null,"outputs":[{"output_type":"stream","text":["{1: 1, 3: 4, 5: 1}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"9MdtD4pgy89t"},"source":["**Dictionaries are mutable:**"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0x2AWL4EzBlb","executionInfo":{"elapsed":1119,"status":"ok","timestamp":1606701189293,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"34eeedea-26de-48fc-a3b1-2e6de1515df7"},"source":["a[1] = \"hello\"\n","\n","print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{1: 'hello', 3: 4, 5: 1}\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OSUCX1d9zHpM","executionInfo":{"elapsed":1115,"status":"ok","timestamp":1606701189293,"user":{"displayName":"Benedict Paten","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gh2rYrrH6yoNnUp0Oj4p4ouybc6ZcWGyPmKFtIY=s64","userId":"06399644931392855882"},"user_tz":480},"outputId":"7cf2d42f-0058-4a84-cf69-59b4ff5e43eb"},"source":["a[\"a new key\"] = 9\n","\n","print(a)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["{1: 'hello', 3: 4, 5: 1, 'a new key': 9}\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"KZP9y5sgyVm8"},"source":["# Homework\n","\n","* ZyBook: Reading 3\n"]}]}